/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
    
    void findMaximumPathToLeafNode(TreeNode* root,int& max,int depth){
        if(root == NULL)
            return;
        
        if(root->left == NULL && root->right == NULL && max < depth)
            max = depth;
        
        findMaximumPathToLeafNode(root->left,max,depth+1);
        findMaximumPathToLeafNode(root->right,max,depth+1);
    }
   
    int maxDepth(TreeNode* root) {
        int max = INT_MIN;
        if(root == NULL)
            return 0;
        findMaximumPathToLeafNode(root,max,1);
        
        return max;
    }
};