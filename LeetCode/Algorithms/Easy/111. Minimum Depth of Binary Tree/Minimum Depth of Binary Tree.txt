/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    
    void findMinimumPathToLeafNode(TreeNode* root,int& min,int depth){
        if(root == NULL)
            return;
        
        if(root->left == NULL && root->right == NULL && min > depth)
            min = depth;
        
        findMinimumPathToLeafNode(root->left,min,depth+1);
        findMinimumPathToLeafNode(root->right,min,depth+1);
    }
    
    int minDepth(TreeNode* root) {
        int min = INT_MAX;
        
        if(root == NULL)
            return 0;
        
        findMinimumPathToLeafNode(root,min,1);
        return min;
    }
};