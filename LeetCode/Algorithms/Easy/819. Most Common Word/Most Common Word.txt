class Solution {
public:
    
    string wordEndCharacters = " ,.!?;'";
    
    bool isWordEndCharacter(char c){
        for(int i=0; i<wordEndCharacters.size();i++){
            if(c == wordEndCharacters[i])
                return true;
        }
        return false;
    }
    
    vector<string> getWords(string paragraph, vector<string>& banned){
        vector<string> result;
        string current = "";
        for(int i=0; i<paragraph.size();i++){
            char curr = paragraph[i];
            if(isWordEndCharacter(curr)){
                if(current != "" && find(banned.begin(),banned.end(),current) == banned.end())
                    result.push_back(current);
                current = "";
            } else {
                current += tolower(curr);
            }
        }
        if(current != "")
            result.push_back(current);
        return result;
    }
    map<string,int> getFrequencies(vector<string>& words){
        map<string,int> frequencies;
        for(int i=0; i<words.size();i++){
            string word = words[i];
            if(frequencies.find(word) == frequencies.end())
                frequencies[word] = 1;
            else 
                frequencies[word]++;
        }
        return frequencies;
    }
    string mostCommonWord(string paragraph, vector<string>& banned) {
        vector<string> words = getWords(paragraph,banned);
        map<string,int> frequencies = getFrequencies(words);
        
        int maxValue = -1;
        string maxWord = "";
        for(auto itr = frequencies.begin(); itr != frequencies.end(); ++itr){
            if(itr->second > maxValue){
                maxValue = itr->second;
                maxWord = itr->first;
            }
        }
        return maxWord;
    }
};