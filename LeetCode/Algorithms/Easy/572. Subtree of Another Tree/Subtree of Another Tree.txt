/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool isSameTree(TreeNode* bst1, TreeNode* bst2){
        if(bst1 == NULL && bst2 == NULL)
            return true;
        if(bst1 == NULL && bst2 != NULL || bst1 != NULL && bst2 == NULL)
            return false;
        if(bst1->val != bst2->val)
            return false;
        return isSameTree(bst1->left,bst2->left) && isSameTree(bst1->right,bst2->right);
    }
    
    
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(isSameTree(s,t))
            return true;
        if(s == NULL)
            return false;
        return isSubtree(s->left,t) || isSubtree(s->right,t);
    }
};