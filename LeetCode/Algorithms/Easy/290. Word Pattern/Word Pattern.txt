class Solution {
public:
    
    vector<string> getWords(string s){
        vector<string> words;
        string current = "";
        for(int i=0; i<s.size();i++){
            if(s[i] == ' '){
                words.push_back(current);
                current = "";
            } else {
                string c(1,s[i]);
                current += c;
            }
        }
        words.push_back(current);
        return words;
    }
    
    bool wordPattern(string pattern, string s) {
        vector<string> words = getWords(s);
        if(words.size() != pattern.size())
            return false;
        
        map<char,string> charToWord;
        map<string,char> wordToChar;
        
        for(int i=0; i<words.size();i++){
            char character = pattern[i];
            string word = words[i];
            
            if(charToWord.find(character) == charToWord.end() && wordToChar.find(word) == wordToChar.end()){
                charToWord[character] = word;
                wordToChar[word] = character;
            } else if(charToWord[character] != word || wordToChar[word] != character)
                return false;
        }
        
        return true;
        
    }
};