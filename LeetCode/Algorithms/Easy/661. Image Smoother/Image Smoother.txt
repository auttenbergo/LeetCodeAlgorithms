class Solution {
public:
    
    bool inBounds(vector<vector<int>>& img,int x,int y){
        if(x >= 0 && x < img.size() && y >= 0 && y < img[0].size())
            return true;
        return false;
    }
    
    int getAverageOfSurrounding(vector<vector<int>>& img,int x,int y){
        double avg = 0;
        double count = 9;
        
        for(int i=-1; i<=1; i++){
            for(int j=-1; j<=1; j++){
                int xx = x+i;
                int yy = y+j;
                
                if(!inBounds(img,xx,yy)){
                    count--;
                    continue;
                }
                avg += img[xx][yy];

            }
        }
        avg /= count;

        return floor(avg);
    }
    
    vector<vector<int>> createVector(int x,int y){
        vector<vector<int>> result;
        for(int i=0; i<x; i++){
            vector<int> v;
            for(int j=0; j<y; j++){
                v.push_back(0);
            }
            result.push_back(v);
        }
        return result;
        
    }
    
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        vector<vector<int>> result = createVector(img.size(),img[0].size());
        
        for(int i=0; i<img.size();i++){
            for(int j=0; j<img[i].size();j++){
                int value = getAverageOfSurrounding(img,i,j);
                result[i][j] = value;
            }
        }
        return result;
    }
};