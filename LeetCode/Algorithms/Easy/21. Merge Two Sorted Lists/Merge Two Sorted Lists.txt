/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1 == NULL)
            return l2;
        if(l2 == NULL)
            return l1;
        
        ListNode* answer = new ListNode;
        ListNode* helper = answer;
        while(l1 != NULL && l2 != NULL){
            int val1 = l1->val;
            int val2 = l2->val;
            if(val1 <= val2){
                helper->next = l1;
                helper = helper->next;
                l1 = l1->next;
            } else {
                helper->next = l2;
                helper = helper->next;
                l2 = l2->next;
            }
            
        }
        while(l1 != NULL){
           helper->next = l1;
            helper = helper->next;
            l1 = l1->next;
        }
        while(l2 != NULL){
            helper->next = l2;
            helper = helper->next;
            l2 = l2->next;
        }
        ListNode* prevAnswer = answer;
        answer = answer->next;
        delete prevAnswer;
        
        return answer;
    }
};