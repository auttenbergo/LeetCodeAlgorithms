
  Definition for a binary tree node.
  struct TreeNode {
      int val;
      TreeNode left;
      TreeNode right;
      TreeNode()  val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x)  val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode left, TreeNode right)  val(x), left(left), right(right) {}
  };
 
class Solution {
public
    bool isSymmetric(TreeNode root) {
        queueTreeNode bfs;
        bfs.push(root);
        int size = 1;
        
        while(!bfs.empty()){
            vectorTreeNode nodes;
            for(int i=0; isize;i++){
                TreeNode current = bfs.front();
                
                nodes.push_back(current);
                bfs.pop();
                
                if(current != NULL){
                    bfs.push(current-left);
                    bfs.push(current-right);
                }
                
            }
            for(int i=0; inodes.size()2;i++){
                TreeNode left = nodes[i];
                TreeNode right = nodes[nodes.size()-1-i];
                
                if(left == NULL && right == NULL)
                    continue;
                if((left != NULL && right == NULL)  (left == NULL && right != NULL))
                    return false;
                if(left-val != right-val)
                    return false;
                
            }            

            size = bfs.size();
        }
        
        return true;
    }
};