class Solution {
public:
    
    string convertToLowercase(string word){
        for(int i=0; i<word.size();i++){
            word[i] = tolower(word[i]);
        }
        return word;
    }
    
    bool canBeTyped(string row, string word){
        set<char> characters;
        for(int i=0; i<word.size();i++){
            characters.insert(word[i]);
        }
        for(auto itr = characters.begin(); itr != characters.end(); ++itr){
            char c = *itr;
            if(row.find(c) == string::npos)
                return false;
        }
        return true;
        
    }
    
    vector<string> findWords(vector<string>& words) {
        vector<string> rows = {"qwertyuiop","asdfghjkl","zxcvbnm"};
        
        vector<string> result;
        
        for(int i=0; i<words.size();i++){
            string word = words[i];
            
            for(int j=0; j<rows.size();j++){
                string row = rows[j];
                if(canBeTyped(row,convertToLowercase(words[i]))){
                    result.push_back(word);
                    break;
                }
            }
        }
        return result;
    }
};