/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int getHeight(TreeNode* root,int height){
        if(root == NULL)
            return height;
        return max(getHeight(root->left,height+1),getHeight(root->right,height+1));
    }
    
    bool helper(TreeNode* root){
        if(root == NULL)
            return true;
        
        int leftHeight = getHeight(root->left,0);
        int rightHeight = getHeight(root->right,0);
        
        int diff = leftHeight - rightHeight;
        if(diff < 0)
            diff *= -1;
        if(diff > 1)
            return false;
        
        return helper(root->left) && helper(root->right);
    }
    
    bool isBalanced(TreeNode* root) {
        if(root == NULL)
            return true;
        return helper(root);
    }
};