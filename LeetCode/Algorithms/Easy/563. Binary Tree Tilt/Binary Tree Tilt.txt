/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int sumOfSubtree(TreeNode* root){
        if(root == NULL)
            return 0;
        
        return sumOfSubtree(root->left) + sumOfSubtree(root->right) + root->val;
    }
    
    void absoluteValueForEachNode(TreeNode* root,int& sum){
        if(root == NULL)
            return;
        if(root->left == NULL && root->right == NULL){
            return;
        }
        sum += abs(sumOfSubtree(root->left) - sumOfSubtree(root->right));
        absoluteValueForEachNode(root->left,sum);
        absoluteValueForEachNode(root->right,sum);
        
        
    }
    int findTilt(TreeNode* root) {
        int sum = 0;
        absoluteValueForEachNode(root,sum);
        return sum;
    }
};