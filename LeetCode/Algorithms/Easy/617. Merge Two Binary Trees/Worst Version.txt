/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        if(root1 == NULL && root2 == NULL)
            return NULL;
        
        int currValue = (root1 == NULL) ? (0) : (root1->val);
        currValue += (root2 == NULL) ? (0) : (root2->val);
        
        TreeNode* root = new TreeNode(currValue);
        
        TreeNode* firstLeft = (root1 != NULL) ? (root1->left) : (NULL);
        TreeNode* secondLeft = (root2 != NULL) ? (root2->left) : (NULL);
        
        root->left = mergeTrees(firstLeft,secondLeft);
        
        TreeNode* firstRight = (root1 != NULL) ? (root1->right) : (NULL);
        TreeNode* secondRight = (root2 != NULL) ? (root2->right) : (NULL);
        
        root->right = mergeTrees(firstRight,secondRight);
        
        return root;
    }
};