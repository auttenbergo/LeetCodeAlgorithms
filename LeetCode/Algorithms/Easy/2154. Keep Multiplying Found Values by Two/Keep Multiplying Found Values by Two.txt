class Solution {
public:
    
    int binarySearch(vector<int>& nums,int left,int right,int target){
        if(left > right)
            return -1;
        int middle = left + (right - left) / 2;
        if(nums[middle] == target)
            return middle;
        if(nums[middle] < target)
            return binarySearch(nums,middle+1,right,target);
        return binarySearch(nums,left,middle-1,target);
    }
    
    int helper(vector<int>& nums, int original){
        int targetIndex = binarySearch(nums,0,nums.size()-1,original);
        if(targetIndex == -1)
            return original;
        return helper(nums,original * 2);
    }
    
    int findFinalValue(vector<int>& nums, int original) {
        sort(nums.begin(),nums.end());
        return helper(nums,original);
    }
};