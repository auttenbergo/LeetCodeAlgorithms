class Solution {
public:
    
    int binarySearch(vector<int>& numbers,int left,int right,int target){
        if(left > right)
            return -1;
        int middle = left + (right - left) / 2;
        if(numbers[middle] == target)
            return middle;
        if(numbers[middle] < target)
            return binarySearch(numbers,middle+1,right,target);
        return binarySearch(numbers,left,middle-1,target);
    }
    
    vector<int> twoSum(vector<int>& numbers, int target) {
        for(int i=0; i<numbers.size();i++){
            int value = numbers[i];
            int semiValue = target - value;
            
            int index = binarySearch(numbers,0,numbers.size()-1,semiValue);
            if(index == -1)
                continue;
            
            if(i != index)
                return {i+1,index+1};
            if(i > 0 && numbers[i-1] == semiValue)
                return {i,i+1};
            if(i < numbers.size()-1 && numbers[i+1] == semiValue){
                return {i+1, i+2};
            }
        }
        return {};
    }
};