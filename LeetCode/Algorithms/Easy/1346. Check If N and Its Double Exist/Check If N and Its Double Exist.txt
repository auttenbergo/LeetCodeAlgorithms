class Solution {
public:
    
    int binarySearch(vector<int>& v,int left,int right,int target){
        if(left > right)
            return -1;
        int middle = left + (right - left) / 2;
        if(v[middle] == target)
            return middle;
        if(v[middle] < target)
            return binarySearch(v,middle+1,right,target);
        return binarySearch(v,left,middle-1,target);
    }
    
    bool checkIfExist(vector<int>& arr) {
        vector<int> sorted = arr;
        sort(sorted.begin(),sorted.end());
        for(int i=0; i<sorted.size();i++){
            int current = sorted[i];
            int target = current * 2;
            
            int targetIndex = binarySearch(sorted,0,sorted.size()-1,target);
            if(targetIndex != -1 && targetIndex != i)
                return true;
        }
        return false;
    }
};