class Solution {
public:
    
    bool isDigit(char c){
        return c >= '0' && c <='9';
    }
    
    void getPrevDigit(string s,int& index){
        while(index >= 0 && !isDigit(s[index]))
            index--;
    }
    
    int secondHighest(string s) {
        set<char> uniques;
        for(int i=0; i<s.size();i++){
            uniques.insert(s[i]);
        }
        s = "";
        for(auto itr = uniques.begin(); itr != uniques.end(); ++itr){
            s += *itr;
        }
        sort(s.begin(),s.end());
        int index = s.size()-1; 
        getPrevDigit(s,index);
        index--;
        getPrevDigit(s,index);
        
        return (index >= 0) ? (s[index] - '0') : (-1);
        
    }
};