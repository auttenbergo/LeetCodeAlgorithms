class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s.size() <= 1)
            return s.size();
        
        
        set<char> seen;
        
        int result = 0;
        int leftIndex = 0;
        
        /* We have two pointers of begining and ending */
        /*
            We are removing the seen characters from the set while it duplicates from current index character 
            And we increase the left pointer by one 
        */
        
        for(int rightIndex = 0; rightIndex < s.size(); rightIndex++){
            while(seen.find(s[rightIndex]) != seen.end()){
                seen.erase(seen.find(s[leftIndex]));
                leftIndex++;
            }
            seen.insert(s[rightIndex]);
            result = max(result,rightIndex - leftIndex + 1);
        }
        return result;
    }
};