/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void helper(TreeNode* root,int value){
        if(root == NULL)
            return;
        if(root->left == NULL && root->right == NULL){
            if(root->val < value)
                root->right = new TreeNode(value);
            else
                root->left = new TreeNode(value);
            
            return;
        }
        
        if(root->val <= value){
            if(root->right == NULL){
                root->right = new TreeNode(value);
                return;
            }
            helper(root->right,value);
        }
        else{
            if(root->left == NULL){
                root->left = new TreeNode(value);
                return;
            }
            helper(root->left,value);
        }
    }
    
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        if(root == NULL)
            return new TreeNode(val);
        helper(root,val);
        return root;
    }
};