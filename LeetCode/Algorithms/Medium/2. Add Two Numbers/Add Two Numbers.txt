/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* answer = new ListNode;
        ListNode* helper = answer;
        
        int saved = 0;
        
        while(l1 != NULL || l2 != NULL){
            int first = (l1 != NULL) ? (l1->val) : (0);
            int second = (l2 != NULL) ? (l2->val) : (0);
            
            int sum = first + second + saved;
            saved = sum / 10;
            if(sum > 9)
                sum %= 10;
            
            helper->next = new ListNode(sum);
            helper = helper->next;
            
            if(l1 != NULL)
                l1 = l1->next;
            if(l2 != NULL)
                l2 = l2->next;
        }
        if(saved != 0)
            helper->next = new ListNode(saved);
        return answer->next;
    }
};