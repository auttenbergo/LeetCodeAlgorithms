/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void getPathsWithTargetSum(TreeNode* root,vector<int> currentPath,int currentSum,int& targetSum,vector<vector<int>>& answer){
        if(root == NULL)
            return;
        
        currentPath.push_back(root->val);
        currentSum += root->val;
        if(root->left == NULL && root->right == NULL){
            if(currentSum == targetSum)
                answer.push_back(currentPath);
            return;
        }
        
        getPathsWithTargetSum(root->left,currentPath,currentSum,targetSum,answer);
        getPathsWithTargetSum(root->right,currentPath,currentSum,targetSum,answer);

        
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> answer;
        getPathsWithTargetSum(root,{},0,targetSum,answer);
        
        return answer;
    }
};