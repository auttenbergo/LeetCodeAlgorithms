class Solution {
public:
    
    void helper(int& n, string current,int open,int closed, vector<string>& answer){
        if(current.size() == n*2){
            answer.push_back(current);
            return;
        }
        if(open < n){
            helper(n,current + "(",open+1,closed,answer);
        }
        if(closed < open){
            helper(n,current + ")",open,closed+1,answer);
        }
    }
    
    vector<string> generateParenthesis(int n) {
        vector<string> answer;
        helper(n,"",0,0,answer);
        return answer;
        
    }
};