class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        vector<vector<int>> dp;
        for(int i=0;i<triangle.size();i++){
            dp.push_back(vector<int>(triangle[i].size(),0));
        }
        dp[0][0] = triangle[0][0];
        for(int row = 1; row < dp.size(); row++){
            for(int column = 0; column < dp[row].size(); column++){
                int firstUp = (column < dp[row-1].size()) ? dp[row-1][column] : 10000;
                int secondUp = (column-1 >= 0) ? dp[row-1][column-1] : 10000;
                
                dp[row][column] = min(firstUp + triangle[row][column],secondUp + triangle[row][column]);
            }
        }
        int rv = INT_MAX;
        for(int i=0;i<dp[dp.size()-1].size();i++){
            rv = min(rv,dp[dp.size()-1][i]);
        }
        return rv;
    }
};