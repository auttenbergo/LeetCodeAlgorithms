/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> answer;
        
        queue<Node*> bfs;
        bfs.push(root);
        
        while(!bfs.empty()){
            vector<int> values;
            int size = bfs.size();
            for(int i=0; i<size; i++){
                Node* node = bfs.front();
                bfs.pop();
                if(node != NULL){
                    values.push_back(node->val);
                    for(int j=0; j<node->children.size(); j++){
                        bfs.push(node->children[j]);
                    }
                }
            }
            if(values.size() != 0)
                answer.push_back(values);
        }
        
        return answer;
    }
    
};