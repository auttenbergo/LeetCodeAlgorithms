/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> answer;
        
        queue<TreeNode*> bfs;
        bfs.push(root);
        
        while(!bfs.empty()){
            vector<int> nodeValues;
            int size = bfs.size();
            for(int i=0; i<size; i++){
                TreeNode* node = bfs.front();
                bfs.pop();
                
                if(node != NULL){
                    nodeValues.push_back(node->val);
                    bfs.push(node->left);
                    bfs.push(node->right);
                }
            }
            
            if(nodeValues.size() != 0)
                answer.push_back(nodeValues[nodeValues.size()-1]);
        }
        
        return answer;
    }
};